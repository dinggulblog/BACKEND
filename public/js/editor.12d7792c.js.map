{"version":3,"file":"js/editor.12d7792c.js","mappings":"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","sources":["webpack://DINGGUL/./src/views/post/Editor.vue","webpack://DINGGUL/./src/views/post/Editor.vue?9bb5"],"sourcesContent":["<template>\r\n  <div class=\"editor\">\r\n    <div class=\"wrap_select_toggle\">\r\n      <div class=\"select\">\r\n        <!-- Main menu select box -->\r\n        <div class=\"main\">\r\n          <select required v-model=\"main\" @change=\"onChangeMainMenu\">\r\n            <option selected disabled hidden :value=\"''\">게시판 선택</option>\r\n            <option v-for=\"main in Object.keys($store.state.menu.menus)\" :key=\"main\" :value=\"main\">{{ main }}</option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Sub menu select box -->\r\n        <div class=\"sub\">\r\n          <select required v-model=\"sub\" :disabled=\"!main\" @change=\"onChangeSubMenu\">\r\n            <option selected disabled hidden :value=\"''\">메뉴 선택</option>\r\n            <template v-if=\"main\">\r\n              <option v-for=\"{ sub } in $store.state.menu.menus[main]\" :key=\"sub\" :value=\"sub\">{{ sub }}</option>\r\n            </template>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Category select box -->\r\n        <div class=\"category\">\r\n          <select v-model=\"category\" :disabled=\"!sub\">\r\n            <option selected disabled hidden :value=\"''\">카테고리 선택</option>\r\n            <template v-if=\"sub\">\r\n              <option v-for=\"category in $store.state.menu.categories\" :key=\"category\" :value=\"category\">{{ category }}</option>\r\n            </template>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Public scope toggle button -->\r\n      <div class=\"wrap_toggle\">\r\n        <Toggle :isPublic=\"isPublic\" @update=\"onChangeIsPublic\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Title and File button -->\r\n    <div class=\"wrap_title_file-add-btn\">\r\n      <div class=\"title\">\r\n        <input type=\"text\" v-model=\"title\" placeholder=\"제목을 입력하세요.\" onfocus=\"this.placeholder=''\" onblur=\"this.placeholder='제목을 입력하세요.'\" />\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div class=\"content\">\r\n      <textarea ref=\"CONTENT_EL\" v-model=\"content\" placeholder=\"당신의 이야기를 적어보세요...\" @keydown=\"onChangeCanLeavePage(false)\" />\r\n      <markdown class=\"markdown\" :source=\"content\" :plugins=\"plugins\" :breaks=\"true\" :xhtmlOut=\"true\" :typographer=\"true\" />\r\n    </div>\r\n\r\n    <!-- GPT Buttons -->\r\n    <div>\r\n      <Button :thema=\"'primary'\" @click=\"onCreateCompletions\">초안 만들기 </Button>\r\n      <Button :thema=\"'primary'\" @click=\"onCloseCompletions\">생성 멈춰! </Button>\r\n    </div>\r\n\r\n    <!-- Image Buttons -->\r\n    <div class=\"wrap_image_btns\">\r\n      <div class=\"images_add_btn\">\r\n        <label for=\"upload_input\" class=\"upload_label\"> <Ico :svg=\"'add-image'\" class=\"ico_add-image\" />사진 추가</label>\r\n        <input ref=\"UPLOAD_INPUT_EL\" type=\"file\" id=\"upload_input\" @change=\"onUploadImages\" @click=\"$refs.UPLOAD_INPUT_EL.value = ''\" multiple />\r\n      </div>\r\n      <!--\r\n        <Button\r\n          v-show=\"fileState.files.length\"\r\n          class=\"btn_image_clear\"\r\n          svg=\"add-image\"\r\n          :content=\"'사진 모두 제거'\"\r\n          :size=\"'md'\"\r\n          @click=\"onClearImages\"\r\n        ></Button>\r\n        -->\r\n    </div>\r\n\r\n    <!-- Images -->\r\n    <div class=\"images\" v-if=\"images.length\">\r\n      <ul>\r\n        <li v-for=\"(file, index) in images\" :key=\"index\">\r\n          <div class=\"wrap_thumbnail\">\r\n            <img \r\n              :src=\"`${file.thumbnail}`\"\r\n              :class=\"file._id === thumbnail ? 'selected_thumbnail' : ''\"\r\n              @click=\"onSelectImage(file), onInsertImage(file.thumbnail)\"\r\n            />\r\n            <Button class=\"image_del_btn\" \r\n              :svg=\"'del-image'\" \r\n              :theme=\"'primary'\"\r\n              @click=\"onDeleteImage(file, index)\"\r\n            />\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <!-- Submit Button -->\r\n    <div class=\"wrap_btns\">\r\n      <Button \r\n        class=\"btn_submit\"\r\n        :shape=\"isMobile ? 'fill-round-full' : 'fill-round'\"\r\n        :theme=\"'primary'\"\r\n        @click=\"onChangeCanLeavePage(true), onUpdatePost()\"\r\n      >작성 완료\r\n      </Button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { inject, ref, reactive, computed, nextTick, watch, onMounted, onUnmounted } from 'vue'\r\nimport { useRouter, useRoute, onBeforeRouteLeave } from 'vue-router'\r\nimport { useStore } from 'vuex'\r\nimport Markdown from 'vue3-markdown-it'\r\nimport MarkdownEmoji from 'markdown-it-emoji'\r\nimport Toggle from '../../components/ui/Toggle.vue'\r\nimport 'highlight.js/styles/atom-one-dark.css'\r\n\r\nconst route = useRoute()\r\nconst { push } = useRouter()\r\nconst { state, dispatch, commit } = useStore()\r\nconst { postId, draftId } = route.query\r\n\r\nconst plugins = [{ plugin: MarkdownEmoji }]\r\n\r\nconst isMobile = inject('isMobile')\r\nconst DIALOG_EL = inject('DIALOG_EL')\r\nconst TOAST_EL = inject('TOAST_EL')\r\nconst CONTENT_EL = ref(null)\r\n\r\nconst MAX_TRY = 3\r\nlet tempId = null\r\nlet autoSave = null\r\nlet eventSource = null\r\nlet canLeavePage = true\r\n\r\nconst main = computed({\r\n  get: () => state.post.main ?? '',\r\n  set: (value) => commit('post/SET_MAIN', value)\r\n})\r\nconst sub = computed({\r\n  get: () => state.post.sub ?? '',\r\n  set: (value) => commit('post/SET_SUB', value)\r\n})\r\nconst title = computed({\r\n  get: () => state.post.post.title ?? '',\r\n  set: (value) => commit('post/SET_TITLE', value)\r\n})\r\nconst content = computed({\r\n  get: () => state.post.post.content ?? '',\r\n  set: (value) => commit('post/SET_CONTENT', value)\r\n})\r\nconst category = computed({\r\n  get: () => state.post.post.category ?? '',\r\n  set: (value) => commit('post/SET_CATEGORY', value)\r\n})\r\nconst isPublic = computed({\r\n  get: () => state.post.post.isPublic,\r\n  set: (value) => commit('post/SET_IS_PUBLIC', value)\r\n})\r\nconst images = computed({\r\n  get: () => state.post.post.images ?? [],\r\n  set: (value) => commit('post/SET_IMAGES', value)\r\n})\r\nconst thumbnail = computed({\r\n  get: () => state.post.post.thumbnail,\r\n  set: (value) => commit('post/SET_THUMBNAIL', value)\r\n})\r\n\r\nconst postState = reactive({\r\n  main,\r\n  sub,\r\n  title,\r\n  content,\r\n  category,\r\n  isPublic,\r\n  images: images.value.map((image) => image._id),\r\n  thumbnail\r\n})\r\n\r\nconst onChangeMainMenu = () => {\r\n  document.body.querySelector('div.sub select').selectedIndex = 0\r\n  document.body.querySelector('div.category select').selectedIndex = 0\r\n}\r\n\r\nconst onChangeSubMenu = () => {\r\n  document.body.querySelector('div.category select').selectedIndex = 0\r\n}\r\n\r\nconst onChangeIsPublic = (state) => {\r\n  isPublic.value = Boolean(state)\r\n}\r\n\r\nconst onUpdateDraft = async (formData) => {\r\n  if (!sub.value) return TOAST_EL.value.open('error', '게시글을 삽입할 메뉴를 선택해야 합니다.')\r\n\r\n  const { success, draft, images: updatedImages } = await dispatch('draft/updateDraft', { \r\n    draftId: tempId,\r\n    payload: formData ? formData : postState\r\n  })\r\n\r\n  if (!success) {\r\n    TOAST_EL.value.open('error', '임시저장에 실패하였습니다')\r\n  } else {\r\n    TOAST_EL.value.open('success', '임시저장 되었습니다.')\r\n    tempId = draft._id\r\n  }\r\n\r\n  return { success, images: updatedImages }\r\n}\r\n\r\nconst onUpdatePost = async () => {\r\n  if (!sub.value) return TOAST_EL.value.open('error', '게시글을 삽입할 메뉴를 선택해야 합니다.')\r\n\r\n  const { success, post, error } = postId\r\n    ? await dispatch('post/updatePost', { payload: postState, postId: postId })\r\n    : await dispatch('post/createPost', { payload: postState })\r\n\r\n  if (!success) return TOAST_EL.value.open('error', error)\r\n\r\n  return push({ name: 'post', params: { postId: post._id } })\r\n}\r\n\r\nconst onUploadImages = async (event) => {\r\n  if (!event.target.files.length) return\r\n  if (!sub.value) return TOAST_EL.value.open('error', '게시글을 삽입할 메뉴를 선택해야 합니다.')\r\n\r\n  for (const { name } of event.target.files) {\r\n    if (String(name).split('.')[0].length > 32) {\r\n      return TOAST_EL.value.open('error', '파일명은 32자 이하만 가능합니다.')\r\n    }\r\n  }\r\n\r\n  const formData = new FormData()\r\n  Object.values(event.target.files).forEach((file) => formData.append('images', file))\r\n  Object.entries(postState).forEach(([key, value]) => formData.append(key, value))\r\n\r\n  const { success, images: updatedImages, error } = postId\r\n    ? await dispatch('post/updatePost', { postId: postId, payload: formData })\r\n    : await onUpdateDraft(formData)\r\n\r\n  if (!success) return TOAST_EL.value.open('error', error)\r\n\r\n  if (Array.isArray(updatedImages) && updatedImages.length) {\r\n    images.value = updatedImages\r\n    onSelectImage(updatedImages[0])\r\n    for await (const image of updatedImages) {\r\n      await nextTick()\r\n      onInsertImage(image.thumbnail)\r\n    }\r\n  }\r\n}\r\n\r\nconst onDeleteImage = async (file, index) => {\r\n  if (typeof file !== 'object') return\r\n\r\n  const { success, error } = postId\r\n    ? await dispatch('post/deleteFile', { postId: postId, imageId: file._id })\r\n    : await dispatch('draft/deleteFile', { draftId: tempId, imageId: file._id })\r\n\r\n  if (!success) return TOAST_EL.value.open('error', error)\r\n\r\n  commit('post/UNSET_IMAGE', index)\r\n}\r\n\r\nconst onSelectImage = (file) => {\r\n  if (typeof file !== 'object') return\r\n  thumbnail.value = file._id\r\n}\r\n\r\nconst onInsertImage = (url) => {\r\n  let start = CONTENT_EL.value.value.substring(0, CONTENT_EL.value.selectionStart)\r\n  let end = CONTENT_EL.value.value.substring(CONTENT_EL.value.selectionEnd, CONTENT_EL.value.value.length)\r\n\r\n  const innerText = `\\n!` + `[` + `]` + `(` + `${url}` + `)\\n`\r\n  content.value = start + innerText + end\r\n  CONTENT_EL.value.focus()\r\n}\r\n\r\nconst onCreateCompletions = async () => {\r\n  const url = `//localhost:3000/v1/openai/stream/completions?prompt=${title.value}`\r\n\r\n  if (eventSource && (eventSource.readyState === 0 || eventSource.readyState === 1)) {\r\n    return TOAST_EL.value.open('error', '초안 생성 중입니다. 생성 종료 버튼을 눌러 진행을 멈추거나 생성이 종료된 후 다시 시도해 주세요.')\r\n  }\r\n  if (title.value?.length < 6) {\r\n    return TOAST_EL.value.open('error', '제목을 최소 5글자 이상 입력해주세요.')\r\n  }\r\n\r\n  eventSource = new EventSource(url, { withCredentials: true })\r\n\r\n  eventSource.onmessage = (event) => {\r\n    const data = JSON.parse(event.data)\r\n    content.value += data\r\n  }\r\n  eventSource.onerror = (error) => {\r\n    error.data === 'DONE'\r\n      ? TOAST_EL.value.open('success', '초안 작성을 완료하였습니다.')\r\n      : TOAST_EL.value.open('error', '서버와 통신이 원할하지 않습니다. 잠시 후 다시 시도해 주세요.')\r\n\r\n    eventSource.close()\r\n  }\r\n}\r\n\r\nconst onCloseCompletions = () => {\r\n  eventSource.close()\r\n}\r\n\r\nconst onChangeCanLeavePage = (bool) => {\r\n  canLeavePage = bool\r\n}\r\n\r\nconst unloadEvent = (event) => {\r\n  if (!canLeavePage) {\r\n    event.preventDefault()\r\n    event.returnValue = ''\r\n  }\r\n}\r\n\r\nwatch(\r\n  () => canLeavePage,\r\n  (newCanLeavePage, oldCanLeavePage) => {\r\n    if (newCanLeavePage && !oldCanLeavePage && !autoSave) {\r\n      autoSave = postId ? setInterval(onUpdatePost, 1000 * 60 * 5) : setInterval(onUpdateDraft, 1000 * 60 * 5)\r\n    }\r\n  },\r\n)\r\n\r\nwatch(\r\n  sub,\r\n  () => {\r\n    if (main.value) {\r\n      commit('menu/SET_CURRENT_MENUS', { main: main.value, sub: sub.value })\r\n    } \r\n  }\r\n)\r\n\r\nwatch(\r\n  () => route.query,\r\n  async () => {\r\n    if (postId) {\r\n      const { success, error } = await dispatch('post/getPost', { postId: postId })\r\n\r\n      if (!success) {\r\n        TOAST_EL.value.open('error', error)\r\n        return push({ name: 'editor' })\r\n      }\r\n    } \r\n    else if (draftId) {\r\n      const { success, error } = await dispatch('post/getDraft', { draftId: draftId })\r\n\r\n      if (!success) {\r\n        TOAST_EL.value.open('error', error)\r\n        return push({ name: 'editor' })\r\n      }\r\n\r\n      tempId = draftId\r\n    }\r\n    else {\r\n      commit('post/SET_POST', {})\r\n    }\r\n  }, { immediate: true }\r\n)\r\n\r\nonMounted(() => {\r\n  window.addEventListener('beforeunload', unloadEvent)\r\n  onSelectImage(images.value[0])\r\n})\r\n\r\nonUnmounted(() => {\r\n  window.removeEventListener('beforeunload', unloadEvent)\r\n  clearInterval(autoSave)\r\n})\r\n\r\nonBeforeRouteLeave(async (to, from, next) => {\r\n  if (canLeavePage) next()\r\n  else {\r\n    const ok = await DIALOG_EL.value.show({\r\n      title: '현재 페이지에서 나가시겠습니까?',\r\n      message: '임시 저장되지 않은 내용은 사라집니다.',\r\n      okButton: '나가기',\r\n      cancelButton: '잠시만요!',\r\n    })\r\n    ok ? next() : next(false)\r\n  }\r\n})\r\n</script>\r\n\r\n<style lang=\"scss\" rel=\"stylesheet/scss\" scoped>\r\n.editor {\r\n  .wrap_select_toggle {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    @include mobile {\r\n      flex-direction: column;\r\n      align-items: flex-end;\r\n    }\r\n\r\n    .select {\r\n      display: flex;\r\n      flex-direction: row;\r\n      width: 90%;\r\n\r\n      @include mobile {\r\n        flex-direction: column;\r\n        width: 100%;\r\n      }\r\n\r\n      div {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        border-bottom: 1px solid var(--border3);\r\n        width: 27rem;\r\n        font-size: 1.4rem;\r\n        margin-right: 2.4rem;\r\n        padding: 0 2.4rem;\r\n\r\n        @include mobile {\r\n          width: 100%;\r\n          margin-right: 0;\r\n          margin-bottom: 1.6rem;\r\n        }\r\n\r\n        select {\r\n          width: 100%;\r\n          font-size: 1.4rem;\r\n          color: var(--text3);\r\n          height: 4.8rem;\r\n          background-color: transparent;\r\n          text-transform: uppercase;\r\n        }\r\n\r\n        &:last-child select > option {\r\n          text-transform: none;\r\n        }\r\n      }\r\n    }\r\n\r\n    .wrap_toggle {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      width: 10%;\r\n\r\n      &:deep(.toggle) {\r\n        flex-direction: row-reverse;\r\n\r\n        span {\r\n          margin: 0 0.4rem 0 0;\r\n        }\r\n      }\r\n\r\n      @include mobile {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_title_file-add-btn {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    border-bottom: 1px solid var(--border3);\r\n    margin: 2.4rem 0 1.6rem;\r\n    width: 100%;\r\n    height: 4.8rem;\r\n    padding: 0 2.4rem;\r\n\r\n    @include mobile {\r\n      margin: 1.6rem 0;\r\n    }\r\n\r\n    .title {\r\n      width: 80%;\r\n\r\n      input {\r\n        color: var(--text4);\r\n        font-size: 1.4rem;\r\n        width: 100%;\r\n      }\r\n\r\n      input::placeholder {\r\n        color: var(--text2);\r\n        font-size: 1.4rem;\r\n      }\r\n    }\r\n  }\r\n\r\n  .content {\r\n    display: flex;\r\n    flex-direction: row;\r\n    border-bottom: 1px solid #ddd;\r\n\r\n    textarea,\r\n    .markdown {\r\n      width: 50%;\r\n      min-height: 48rem;\r\n      padding: 2.4rem;\r\n      font-size: 1.4rem;\r\n      color: var(--text3);\r\n      overflow-y: auto;\r\n      max-height: 64rem;\r\n      line-height: 1.5;\r\n\r\n      -ms-overflow-style: none;\r\n      scrollbar-width: none;\r\n      scroll-behavior: smooth;\r\n      -webkit-overflow-scrolling: touch;\r\n\r\n      &::-webkit-scrollbar {\r\n        display: none; /* Chrome, Safari, Opera*/\r\n      }\r\n    }\r\n\r\n    textarea {\r\n      margin: 0 2.4rem 0 0;\r\n      resize: vertical;\r\n\r\n      @include mobile_all {\r\n        width: 100%;\r\n        margin: 0;\r\n      }\r\n    }\r\n\r\n    textarea::placeholder {\r\n      color: var(--text2);\r\n      font-size: 1.4rem;\r\n    }\r\n\r\n    .markdown {\r\n      @include mobile_all {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  .images_add_btn {\r\n    margin: 1.6rem 0 2.4rem;\r\n    label.upload_label {\r\n      font-size: 1.2rem;\r\n      line-height: 1.8rem;\r\n      cursor: pointer;\r\n      text-transform: uppercase;\r\n      letter-spacing: 0.1rem;\r\n      color: var(--text3);\r\n      display: flex;\r\n      align-items: center;\r\n      padding: 1.2rem 2.4rem 1.2rem 0;\r\n\r\n      .ico_add-image {\r\n        margin: 0 0.8rem 0 0;\r\n      }\r\n    }\r\n\r\n    input#upload_input {\r\n      display: none;\r\n    }\r\n  }\r\n\r\n  .btn_image_clear {\r\n    margin: 0 0 0 0;\r\n  }\r\n\r\n  .images {\r\n    margin: 0 0 2.4rem 0;\r\n    ul {\r\n      display: flex;\r\n      flex-direction: row;\r\n      flex-wrap: wrap;\r\n      margin: calc(3.2rem - 1.2rem) 0 0;\r\n\r\n      li {\r\n        width: 7.4rem;\r\n        height: calc(7.4rem + 1.6rem);\r\n        margin: 0rem 2.4rem 0 0;\r\n\r\n        .wrap_thumbnail {\r\n          position: relative;\r\n          img {\r\n            width: 100%;\r\n            height: 7.4rem;\r\n            border-radius: 2.4rem;\r\n            object-fit: cover;\r\n            padding: 0.2rem;\r\n\r\n            &.selected_thumbnail {\r\n              border: 2px solid var(--primary);\r\n            }\r\n          }\r\n          .image_del_btn {\r\n            position: absolute;\r\n            bottom: -0.6rem;\r\n            right: -0.6rem;\r\n            color: var(--primary);\r\n\r\n            i {\r\n              font-size: 2.2rem;\r\n            }\r\n\r\n            .material-symbols-outlined {\r\n              font-variation-settings: 'FILL' 1, 'wght' 400, 'GRAD' 0, 'opsz' 48;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .wrap_btns {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n\r\n    .wrap_image_btns {\r\n      display: flex;\r\n      align-items: center;\r\n      margin: 1.6rem 0 2rem;\r\n      justify-content: flex-start;\r\n      width: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./Editor.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Editor.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Editor.vue?vue&type=style&index=0&id=474b2e8e&lang=scss&rel=stylesheet%2Fscss&scoped=true\"\n\nimport exportComponent from \"C:\\\\Users\\\\kimku\\\\OneDrive\\\\바탕 화면\\\\frontend\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-474b2e8e\"]])\n\nexport default __exports__"],"names":["route","useRoute","push","useRouter","state","dispatch","commit","useStore","postId","draftId","query","plugins","plugin","MarkdownEmoji","isMobile","inject","DIALOG_EL","TOAST_EL","CONTENT_EL","ref","tempId","autoSave","eventSource","canLeavePage","main","computed","get","post","set","value","sub","title","content","category","isPublic","images","thumbnail","postState","reactive","map","image","_id","onChangeMainMenu","document","body","querySelector","selectedIndex","onChangeSubMenu","onChangeIsPublic","Boolean","onUpdateDraft","async","open","success","draft","updatedImages","payload","formData","onUpdatePost","error","name","params","onUploadImages","event","target","files","length","String","split","FormData","Object","values","forEach","file","append","entries","key","Array","isArray","onSelectImage","nextTick","onInsertImage","onDeleteImage","index","imageId","url","start","substring","selectionStart","end","selectionEnd","innerText","focus","onCreateCompletions","readyState","EventSource","withCredentials","onmessage","data","JSON","parse","onerror","close","onCloseCompletions","onChangeCanLeavePage","bool","unloadEvent","preventDefault","returnValue","watch","newCanLeavePage","oldCanLeavePage","setInterval","immediate","onMounted","window","addEventListener","onUnmounted","removeEventListener","clearInterval","onBeforeRouteLeave","to","from","next","ok","show","message","okButton","cancelButton","__exports__"],"sourceRoot":""}